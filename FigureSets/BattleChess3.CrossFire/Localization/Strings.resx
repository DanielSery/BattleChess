<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
      Microsoft ResX Schema 
      
      Version 2.0
      
      The primary goals of this format is to allow a simple XML format 
      that is mostly human readable. The generation and parsing of the 
      various data types are done through the TypeConverter classes 
      associated with the data types.
      
      Example:
      
      ... ado.net/XML headers & schema ...
      <resheader name="resmimetype">text/microsoft-resx</resheader>
      <resheader name="version">2.0</resheader>
      <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
      <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
      <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
      <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
      <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
          <value>[base64 mime encoded serialized .NET Framework object]</value>
      </data>
      <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
          <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
          <comment>This is a comment</comment>
      </data>
                  
      There are any number of "resheader" rows that contain simple 
      name/value pairs.
      
      Each data row contains a name, and value. The row also contains a 
      type or mimetype. Type corresponds to a .NET class that support 
      text/value conversion through the TypeConverter architecture. 
      Classes that don't support this are serialized and stored with the 
      mimetype set.
      
      The mimetype is used for serialized objects, and tells the 
      ResXResourceReader how to depersist the object. This is currently not 
      extensible. For a given mimetype the value must be set accordingly:
      
      Note - application/x-microsoft.net.object.binary.base64 is the format 
      that the ResXResourceWriter will generate, however the reader can 
      read any of the formats listed below.
      
      mimetype: application/x-microsoft.net.object.binary.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
              : and then encoded with base64 encoding.
      
      mimetype: application/x-microsoft.net.object.soap.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
              : and then encoded with base64 encoding.
  
      mimetype: application/x-microsoft.net.object.bytearray.base64
      value   : The object must be serialized into a byte array 
              : using a System.ComponentModel.TypeConverter
              : and then encoded with base64 encoding.
      -->
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root"
                xmlns="">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string"/>
                            <xsd:attribute name="type" type="xsd:string"/>
                            <xsd:attribute name="mimetype" type="xsd:string"/>
                            <xsd:attribute ref="xml:space"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string"/>
                            <xsd:attribute name="name" type="xsd:string"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
                            <xsd:attribute ref="xml:space"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required"/>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <data name="Archer_Description" xml:space="preserve">
    <value>Archer
      
Move:

⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬛▣⬛⬜⬜

Attack:

⬜⬜⬜⬛⬜⬜⬜⬜
⬜⬜⬜⬛⬜⬜⬜⬛
⬛⬜⬜⬛⬜⬜⬛⬜
⬜⬛⬜⬛⬜⬛⬜⬜
⬜⬜⬛⬛⬛⬜⬜⬜
⬜⬜⬜▣⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
      
Info: Good for taking control
Good vs: Ninja, Knight, Spy
Bad vs: Builder
Special: Does not move with attack
</value>
  </data>
    <data name="Archer_Name" xml:space="preserve">
    <value>Archer</value>
  </data>
    <data name="Bomber_Description" xml:space="preserve">
    <value>Bomber

Move:

⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬛⬜⬛⬜⬛⬜⬜⬜
⬜⬜⬜▩▩▩⬜⬜
⬛⬜▣▩⬛▩⬜⬜
⬜⬜⬜▩▩▩⬜⬜
⬛⬜⬛⬜⬛⬜⬜⬜
      
Attack: Cannot directly attack
      
Info: Hard to use, high reward
Good vs: Ninja, Spy
Bad vs: Builder, Archer, Knight
Special: When move, near tiles are destroyed
</value>
  </data>
    <data name="Bomber_Name" xml:space="preserve">
    <value>Bomber</value>
  </data>
    <data name="Builder_Description" xml:space="preserve">
    <value>Builder

Move:

⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬛⬜⬜⬜⬜
⬜⬜⬛▣⬛⬜⬜⬜
⬜⬜⬜⬛⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜

Shield:

⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜▦▦▦⬜⬜⬜
⬜▦⬜⬜⬜▦⬜⬜
⬜▦⬜▣⬜▦⬜⬜
⬜▦⬜⬜⬜▦⬜⬜
⬜⬜▦▦▦⬜⬜⬜
      
Attack: Cannot directly attack
      
Info: Defensive unit
Good vs: Archer, Spy
Bad vs: Ninja, Knight
Special: Creates shield around itself
Special: Moving shield pushes units away
</value>
  </data>
    <data name="Builder_Name" xml:space="preserve">
    <value>Builder</value>
  </data>
    <data name="CrossFireFigureGroup_Name" xml:space="preserve">
    <value>Cross fire</value>
  </data>
    <data name="Knight_Description" xml:space="preserve">
    <value>Knight

Move: As chess knight

⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬛⬜⬛⬜⬜⬜⬜
⬛⬜⬜⬜⬛⬜⬜⬜
⬜⬜▣⬜⬜⬜⬜⬜
⬛⬜⬜⬜⬛⬜⬜⬜
⬜⬛⬜⬛⬜⬜⬜⬜

Attack: Kills all units to tile

⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬛⬜⬜⬛⬜⬜
⬛⬜⬛⬜⬛⬜⬜⬜
⬜⬛⬛⬛⬜⬜⬜⬜
⬛⬛▣⬛⬛⬛⬛⬜
⬜⬛⬛⬛⬜⬜⬜⬜
⬛⬜⬛⬜⬛⬜⬜⬜
      
Info: All round good
Good vs: Builder, Spy, Ninja
Bad vs: Archer
</value>
  </data>
    <data name="Knight_Name" xml:space="preserve">
    <value>Knight</value>
  </data>
    <data name="Ninja_Description" xml:space="preserve">
    <value>Ninja

Move:

⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬛⬜⬜⬜⬜
⬜⬜⬛▦⬛⬜⬜⬜
⬜⬜⬜▣⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜

⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬛⬜⬛⬜⬜⬜
⬜⬜⬜▣⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜

Attack:

⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬛⬜⬜⬜⬜
⬜⬜⬜⬛⬜⬜⬜⬜
⬜⬜⬛▣⬛⬜⬜⬜
⬜⬜⬜⬛⬜⬜⬜⬜

⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬛⬜⬜⬜⬜
⬜⬜⬛▣⬛⬜⬜⬜
⬜⬜⬜⬛⬜⬜⬜⬜
      
Info: Basic unit
Good vs: Builder
Bad vs: Spy, Archer, Knight, Bomber
Special: Can jump over object
Special: On last tile turns into Bomber
</value>
  </data>
    <data name="Ninja_Name" xml:space="preserve">
    <value>Ninja</value>
  </data>
    <data name="Spy_Description" xml:space="preserve">
    <value>Spy

Move + Attack: As chess king

⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬛⬛⬛⬜⬜⬜
⬜⬜⬛▣⬛⬜⬜⬜
⬜⬜⬛⬛⬛⬜⬜⬜

Info: Strategic unit
Good vs: Builder, Ninja
Bad vs: Archer, Knight, Bomber
Special: Can swap with allied unit
</value>
  </data>
    <data name="Spy_Name" xml:space="preserve">
    <value>Spy</value>
  </data>
    <data name="Wall_Description" xml:space="preserve">
    <value>Wall

Info: Can be destoyed by allied unit

Attack: Cannot attack
Movement: Cannot move 
</value>
  </data>
    <data name="Wall_Name" xml:space="preserve">
    <value>Wall</value>
  </data>
</root>