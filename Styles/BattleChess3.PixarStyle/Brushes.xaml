<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <BitmapImage x:Key="Preview" UriSource="/BattleChess3.PixarStyle;component/Images/Preview.png"/>
    <ImageBrush x:Key="ApplicationBackgroundBrush" ImageSource="/BattleChess3.PixarStyle;component/Images/ApplicationBackground.jpg" />
    <ImageBrush x:Key="DefaultObjectBrush" ImageSource="/BattleChess3.PixarStyle;component/Images/DefaultObject.png" />
    <ImageBrush x:Key="TabItemBrush" ImageSource="/BattleChess3.PixarStyle;component/Images/TabItem.png" />
    <ImageBrush x:Key="TabItemMouseOnBrush" ImageSource="/BattleChess3.PixarStyle;component/Images/TabItemMouseOn.png" />
    <ImageBrush x:Key="TabItemDisabledBrush" ImageSource="/BattleChess3.PixarStyle;component/Images/TabItemDisabled.png" />
    <ImageBrush x:Key="DefaultButtonBrush" ImageSource="/BattleChess3.PixarStyle;component/Images/DefaultButton.png" />
    <ImageBrush x:Key="DefaultButtonMouseOnBrush" ImageSource="/BattleChess3.PixarStyle;component/Images/DefaultButtonMouseOn.png" />
    <ImageBrush x:Key="ChessTileBrush" ImageSource="/BattleChess3.PixarStyle;component/Images/ChessTile.png" />
    <ImageBrush x:Key="ChessTileSelected" ImageSource="/BattleChess3.PixarStyle;component/Images/ChessTileSelected.png"/>
    
    <Style TargetType="TextBlock">
        <Setter Property="Background" Value="{DynamicResource DefaultObjectBrush}"/>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontWeight" Value="Heavy" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    
    <Style TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource DefaultObjectBrush}"/>
        <Setter Property="FontWeight" Value="Heavy" />
        <Setter Property="BorderThickness" Value="10" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
    </Style>
    
    <Style TargetType="TabItem">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="100" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{DynamicResource TabItemBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Padding="12,7,0,0"
                            Background="{TemplateBinding Background}">
                        <TextBlock Text="{TemplateBinding Header}"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Background" Value="{DynamicResource TabItemBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Blue" />
                <Setter Property="Background" Value="{DynamicResource TabItemMouseOnBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Blue" />
                <Setter Property="Background" Value="{DynamicResource TabItemMouseOnBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="DarkRed" />
                <Setter Property="Background" Value="{DynamicResource TabItemDisabledBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="50" />
        <Setter Property="FontWeight" Value="Heavy" />
        <Setter Property="Background" Value="{DynamicResource DefaultButtonBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Blue" />
                <Setter Property="Background" Value="{DynamicResource DefaultButtonMouseOnBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="MainWindowStyle" TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource ApplicationBackgroundBrush}"/>
    </Style>
    
    <Style x:Key="ChessButtonStyle" TargetType="Button">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontWeight" Value="Heavy" />
        <Setter Property="Background" Value="{DynamicResource ChessTileBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ChessTileSelected}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>